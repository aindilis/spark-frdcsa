#SPARK Cache file - DO NOT EDIT
file: sample.intake/7f4c1a4336476d10574186def038789f
sourcehash: 44ca4b774d23b32e8fbe2aff7a1c07e4
requires: spark.lang.builtin/2c8e888e2fec072b4140babad83ff2be
cspark.internal.parse.pickleable_object
_constructObject1
p2
(cspark.internal.parse.processing
FileSPU
p3
S'sample.intake'
p4
(lp5
(g2
(cspark.internal.parse.expr
ExprStructureBrace
p7
I0
I26
(g2
(cspark.internal.parse.expr
ExprStructureOrdinary
p9
I11
I25
(g2
(cspark.internal.parse.expr
ExprLocalVariable
p11
I19
I24
cspark.internal.parse.values
__Variable
p13
(S'$user'
p14
tp15
Rp12
Ntp16
Rp10
tp17
S'D'
p18
cspark.internal.parse.values
__Symbol
p20
(S'intake'
p21
tp22
Rp19
g20
(S'sample.intake.intake'
p24
tp25
Rp23
tp26
Rp8
tp27
S'1'
p28
g20
(S'defaction{}'
p30
tp31
Rp29
g20
(S'spark.lang.builtin.defaction{}'
p33
tp34
Rp32
(dp35
g4
(dp36
tp37
Rp6
g2
(g7
I27
I45
(g2
(cspark.internal.parse.expr
ExprSymbol
p40
I40
I44
g20
(S'USER'
p42
tp43
Rp41
S'j'
p44
g20
(S'sample.intake.USER'
p46
tp47
Rp45
tp48
Rp39
tp49
g28
g20
(S'defconstant{}'
p51
tp52
Rp50
g20
(S'spark.lang.builtin.defconstant{}'
p54
tp55
Rp53
(dp56
g4
(dp57
tp58
Rp38
g2
(g7
I47
I74
(g2
(g9
I61
I73
(g2
(g11
I67
I72
g12
Ntp62
Rp61
tp63
g18
g20
(S'User'
p65
tp66
Rp64
g20
(S'sample.intake.User'
p68
tp69
Rp67
tp70
Rp60
tp71
g28
g20
(S'defpredicate{}'
p73
tp74
Rp72
g20
(S'spark.lang.builtin.defpredicate{}'
p76
tp77
Rp75
(dp78
g4
(dp79
tp80
Rp59
g2
(g7
I75
I114
(g2
(g9
I89
I113
(g2
(g11
I97
I102
g12
Ntp84
Rp83
g2
(g11
I103
I112
g13
(S'$username'
p87
tp88
Rp86
Ntp89
Rp85
tp90
g18
g20
(S'Called'
p92
tp93
Rp91
g20
(S'sample.intake.Called'
p95
tp96
Rp94
tp97
Rp82
tp98
g28
g72
g75
(dp99
g4
(dp100
tp101
Rp81
g2
(g7
I116
I147
(g2
(g9
I130
I146
(g2
(g11
I140
I145
g12
Ntp105
Rp104
tp106
g18
g20
(S'Homeless'
p108
tp109
Rp107
g20
(S'sample.intake.Homeless'
p111
tp112
Rp110
tp113
Rp103
tp114
g28
g72
g75
(dp115
g4
(dp116
tp117
Rp102
g2
(g7
I148
I175
(g2
(g9
I162
I174
(g2
(g11
I168
I173
g12
Ntp121
Rp120
tp122
g18
g20
(S'Poor'
p124
tp125
Rp123
g20
(S'sample.intake.Poor'
p127
tp128
Rp126
tp129
Rp119
tp130
g28
g72
g75
(dp131
g4
(dp132
tp133
Rp118
g2
(g7
I176
I202
(g2
(g9
I190
I201
(g2
(g11
I195
I200
g12
Ntp137
Rp136
tp138
g18
g20
(S'Ill'
p140
tp141
Rp139
g20
(S'sample.intake.Ill'
p143
tp144
Rp142
tp145
Rp135
tp146
g28
g72
g75
(dp147
g4
(dp148
tp149
Rp134
g2
(g7
I203
I234
(g2
(g9
I217
I233
(g2
(g11
I227
I232
g12
Ntp153
Rp152
tp154
g18
g20
(S'Disabled'
p156
tp157
Rp155
g20
(S'sample.intake.Disabled'
p159
tp160
Rp158
tp161
Rp151
tp162
g28
g72
g75
(dp163
g4
(dp164
tp165
Rp150
g2
(g7
I236
I287
(g2
(g9
I250
I286
(g2
(g11
I270
I275
g12
Ntp169
Rp168
g2
(g11
I276
I285
g13
(S'$location'
p172
tp173
Rp171
Ntp174
Rp170
tp175
g18
g20
(S'Sleeps_At_Location'
p177
tp178
Rp176
g20
(S'sample.intake.Sleeps_At_Location'
p180
tp181
Rp179
tp182
Rp167
tp183
g28
g72
g75
(dp184
g4
(dp185
tp186
Rp166
g2
(g7
I346
I546
(g2
(g40
I360
I372
g20
(S'Begin_Intake'
p190
tp191
Rp189
g44
g20
(S'sample.intake.Begin_Intake'
p193
tp194
Rp192
tp195
Rp188
g2
(cspark.internal.parse.expr
ExprStructureColon
p197
I375
I400
(g2
(cspark.internal.parse.expr
ExprList
p199
I380
I400
(g2
(g197
I381
I399
(g2
(g9
I385
I399
(g2
(g11
I393
I398
g12
S'g'
p203
tp204
Rp202
tp205
S'f'
p206
g19
g23
tp207
Rp201
tp208
S'c'
p209
g20
(S'do:'
p211
tp212
Rp210
g20
(S'spark.lang.builtin.do:'
p214
tp215
Rp213
tp216
Rp200
tp217
S'l'
p218
tp219
Rp198
tp220
Ng20
(S'cue:'
p222
tp223
Rp221
S'('
p224
tp225
Rp196
g2
(g197
I403
I539
(g2
(g199
I411
I539
(g2
(g197
I412
I535
(g2
(g199
I417
I458
(g2
(g197
I418
I457
(g2
(g9
I427
I457
(g2
(g9
I432
I456
(g2
(g11
I440
I445
g12
S'-'
p234
tp235
Rp233
g2
(g11
I446
I455
g86
g234
tp237
Rp236
tp238
S's'
p239
g91
g94
tp240
Rp232
tp241
g239
g20
(S'and'
p243
tp244
Rp242
g20
(S'spark.lang.builtin.and'
p246
tp247
Rp245
tp248
Rp231
tp249
S'x'
p250
g20
(S'context:'
p252
tp253
Rp251
g20
(S'spark.lang.builtin.context:'
p255
tp256
Rp254
tp257
Rp230
tp258
g250
tp259
Rp229
g2
(g199
I460
I535
(g2
(g197
I461
I534
(g2
(g9
I465
I534
(g2
(cspark.internal.parse.expr
ExprString
p264
I479
I513
S' *** Begin intake of User %s ***'
p265
S'+'
p266
tp267
Rp263
g2
(g199
I522
I533
(g2
(g11
I523
I532
g86
g266
tp270
Rp269
tp271
g266
tp272
Rp268
tp273
S'd'
p274
g20
(S'print'
p276
tp277
Rp275
g20
(S'spark.lang.builtin.print'
p279
tp280
Rp278
tp281
Rp262
tp282
g250
g210
g213
tp283
Rp261
tp284
g250
tp285
Rp260
tp286
g250
g20
(S'seq:'
p288
tp289
Rp287
g20
(S'spark.lang.builtin.seq:'
p291
tp292
Rp290
tp293
Rp228
tp294
g250
tp295
Rp227
tp296
Ng20
(S'body:'
p298
tp299
Rp297
g224
tp300
Rp226
tp301
g28
g20
(S'defprocedure{}'
p303
tp304
Rp302
g20
(S'spark.lang.builtin.defprocedure{}'
p306
tp307
Rp305
(dp308
g4
(dp309
(g86
Ng12
Nutp310
Rp187
g2
(g9
I548
I559
(g2
(g40
I554
I558
g41
g266
g45
tp313
Rp312
tp314
S'u'
p315
g64
g67
tp316
Rp311
g2
(g9
I560
I592
(g2
(g40
I568
I572
g41
g266
g45
tp319
Rp318
g2
(g264
I573
I591
S'Andrew Dougherty'
p321
g266
tp322
Rp320
tp323
g315
g91
g94
tp324
Rp317
eg4
N(dp325
(S'Homeless'
p326
g2
(cspark.internal.parse.fip
Decl
p328
g110
(lp329
(g2
(cspark.internal.parse.mode
Mode
p331
S's=-'
p332
(lp333
(lp334
tp335
Rp330
g2
(g331
S'r=-'
p337
(lp338
(lp339
tp340
Rp336
g2
(g331
S'u=+'
p342
(lp343
(lp344
tp345
Rp341
g2
(g331
S'a=-'
p347
(lp348
(lp349
tp350
Rp346
g2
(g331
S'f=g'
p352
(lp353
(lp354
tp355
Rp351
eNNtp356
Rp327
S'User'
p357
g2
(g328
g67
(lp359
(g2
(g331
S's=-'
p361
(lp362
(lp363
tp364
Rp360
g2
(g331
S'r=-'
p366
(lp367
(lp368
tp369
Rp365
g2
(g331
S'u=+'
p371
(lp372
(lp373
tp374
Rp370
g2
(g331
S'a=-'
p376
(lp377
(lp378
tp379
Rp375
g2
(g331
S'f=g'
p381
(lp382
(lp383
tp384
Rp380
eNNtp385
Rp358
S'Called'
p386
g2
(g328
g94
(lp388
(g2
(g331
S's=--'
p390
(lp391
(lp392
tp393
Rp389
g2
(g331
S'r=--'
p395
(lp396
(lp397
tp398
Rp394
g2
(g331
S'u=++'
p400
(lp401
(lp402
tp403
Rp399
g2
(g331
S'a=--'
p405
(lp406
(lp407
tp408
Rp404
g2
(g331
S'f=gg'
p410
(lp411
(lp412
tp413
Rp409
eNNtp414
Rp387
S'Poor'
p415
g2
(g328
g126
(lp417
(g2
(g331
S's=-'
p419
(lp420
(lp421
tp422
Rp418
g2
(g331
S'r=-'
p424
(lp425
(lp426
tp427
Rp423
g2
(g331
S'u=+'
p429
(lp430
(lp431
tp432
Rp428
g2
(g331
S'a=-'
p434
(lp435
(lp436
tp437
Rp433
g2
(g331
S'f=g'
p439
(lp440
(lp441
tp442
Rp438
eNNtp443
Rp416
S'Sleeps_At_Location'
p444
g2
(g328
g179
(lp446
(g2
(g331
S's=--'
p448
(lp449
(lp450
tp451
Rp447
g2
(g331
S'r=--'
p453
(lp454
(lp455
tp456
Rp452
g2
(g331
S'u=++'
p458
(lp459
(lp460
tp461
Rp457
g2
(g331
S'a=--'
p463
(lp464
(lp465
tp466
Rp462
g2
(g331
S'f=gg'
p468
(lp469
(lp470
tp471
Rp467
eNNtp472
Rp445
S'Ill'
p473
g2
(g328
g142
(lp475
(g2
(g331
S's=-'
p477
(lp478
(lp479
tp480
Rp476
g2
(g331
S'r=-'
p482
(lp483
(lp484
tp485
Rp481
g2
(g331
S'u=+'
p487
(lp488
(lp489
tp490
Rp486
g2
(g331
S'a=-'
p492
(lp493
(lp494
tp495
Rp491
g2
(g331
S'f=g'
p497
(lp498
(lp499
tp500
Rp496
eNNtp501
Rp474
S'USER'
p502
g2
(g328
g45
(lp504
(g2
(g331
S' ='
p506
(lp507
(lp508
tp509
Rp505
eNNtp510
Rp503
S'Disabled'
p511
g2
(g328
g158
(lp513
(g2
(g331
S's=-'
p515
(lp516
(lp517
tp518
Rp514
g2
(g331
S'r=-'
p520
(lp521
(lp522
tp523
Rp519
g2
(g331
S'u=+'
p525
(lp526
(lp527
tp528
Rp524
g2
(g331
S'a=-'
p530
(lp531
(lp532
tp533
Rp529
g2
(g331
S'f=g'
p535
(lp536
(lp537
tp538
Rp534
eNNtp539
Rp512
S'intake'
p540
g2
(g328
g23
(lp542
(g2
(g331
S'd=-'
p544
(lp545
(lp546
tp547
Rp543
g2
(g331
S'f=g'
p549
(lp550
(lp551
tp552
Rp548
eNNtp553
Rp541
S'Begin_Intake'
p554
g2
(g328
g192
(lp556
(g2
(g331
g506
(lp558
(lp559
tp560
Rp557
eNNtp561
Rp555
uccopy_reg
_reconstructor
p563
(csets
Set
p564
c__builtin__
object
p565
Ntp566
Rp562
((dp567
S'spark.lang.builtin'
p568
I01
stp569
bg563
(g564
g565
Ntp571
Rp570
((dp572
tp573
b(dp574
(g30
g2
(g328
g32
(lp576
(g2
(g331
S'1=D:+++++q'
p578
(lp579
(S'imp:'
p580
S'doc:'
p581
S'properties:'
p582
S'features:'
p583
S'argtypes:'
p584
S'roles:'
p585
e(lp586
tp587
Rp577
eNS'spark.lang.builtin.DefactionBrace'
p588
tp589
Rp575
g65
g358
g92
g387
g124
g416
g252
g2
(g328
g254
(lp591
(g2
(g331
S'x=s*+'
p593
(lp594
(lp595
tp596
Rp592
eNS'spark.internal.repr.taskexpr.ContextColon'
p597
tp598
Rp590
g140
g474
g51
g2
(g328
g53
(lp600
(g2
(g331
S'1=j:+++'
p602
(lp603
(S'imp:'
p604
S'doc:'
p605
S'properties:'
p606
e(lp607
tp608
Rp601
eNS'spark.lang.builtin.DefconstantBrace'
p609
tp610
Rp599
g73
g2
(g328
g75
(lp612
(g2
(g331
S'1=D:+++++'
p614
(lp615
(S'imp:'
p616
S'doc:'
p617
S'properties:'
p618
S'argtypes:'
p619
S'static:'
p620
e(lp621
tp622
Rp613
eNS'spark.lang.builtin.DefpredicateBrace'
p623
tp624
Rp611
g42
g503
g190
g555
g211
g2
(g328
g213
(lp626
(g2
(g331
S'x=d'
p628
(lp629
(lp630
tp631
Rp627
g2
(g331
S'c=f'
p633
(lp634
(lp635
tp636
Rp632
eNS'spark.internal.repr.taskexpr.DoColon'
p637
tp638
Rp625
g288
g2
(g328
g290
(lp640
(g2
(g331
S'x=*x'
p642
(lp643
(lp644
tp645
Rp641
eS'spark.internal.parse.combiner.SERIAL'
p646
S'spark.internal.repr.taskexpr.SeqColon'
p647
tp648
Rp639
g303
g2
(g328
g305
(lp650
(g2
(g331
S'1=j:lsx+++q'
p652
(lp653
(S'cue:'
p654
S'precondition:'
p655
S'body:'
p656
S'doc:'
p657
S'properties:'
p658
S'features:'
p659
S'roles:'
p660
e(lp661
(S'cue:'
p662
S'body:'
p663
etp664
Rp651
g2
(g331
S'L=L:RRRLLLL'
p666
(lp667
(g654
g655
g656
g657
g658
g659
g660
e(lp668
(g662
g663
etp669
Rp665
eS'spark.internal.parse.combiner.DEFPROCEDURE'
p670
S'spark.lang.builtin.DefprocedureBrace'
p671
tp672
Rp649
g108
g327
g276
g2
(g328
g278
(lp674
(g2
(g331
S'd=++'
p676
(lp677
(lp678
tp679
Rp675
g2
(g331
S'f=gg'
p681
(lp682
(lp683
tp684
Rp680
eNNtp685
Rp673
g177
g445
g243
g2
(g328
g245
(lp687
(g2
(g331
S's=*s'
p689
(lp690
(lp691
tp692
Rp688
g2
(g331
S'u=*u'
p694
(lp695
(lp696
tp697
Rp693
eS'spark.internal.parse.combiner.SERIAL'
p698
S'spark.lang.builtin.And'
p699
tp700
Rp686
g156
g512
g21
g541
ug563
(g564
g565
Ntp702
Rp701
((dp703
g568
I01
stp704
bg563
(g564
g565
Ntp706
Rp705
((dp707
tp708
bg563
(csets
ImmutableSet
p710
g565
Ntp711
Rp709
((dp712
Ntp713
b(lp714
I25
NNNNNNNS'{defaction (intake $user)}\n{defconstant USER}\n\n{defpredicate (User $user)}\n{defpredicate (Called $user $username)}\n\n{defpredicate (Homeless $user)}\n{defpredicate (Poor $user)}\n{defpredicate (Ill $user)}\n{defpredicate (Disabled $user)}\n\n{defpredicate (Sleeps_At_Location $user $location)}\n\n# {defpredicate (FollowUp Homeless Sleeps_At_Location)}\n\n{defprocedure Begin_Intake\n  cue: [do: (intake $user)]\n  body:\n  [seq: [context: (and (Called $user $username))]\n\t[do: (print\n\t      " *** Begin intake of User %s ***" \n\t      [$username])]\n\n\t]\n  \n  }\n\n(User USER)\n(Called USER "Andrew Dougherty")\n'
p715
NNtp716
Rp1
.
# END OF FILE#
